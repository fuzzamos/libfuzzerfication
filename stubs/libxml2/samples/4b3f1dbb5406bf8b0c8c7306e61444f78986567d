<?xml-stylesheet type="text/xsl" href="/style/testcase.xsl"?>
<t:test xmlns:t="http://xproc.org/ns/testsuite"
        xmlns:p="http://www.w3.org/ns/xproc"
        xmlns:c="http://www.w1024.org/ns/xproc-step"
        xmlns:err="http://www.w3.org/ns/xproc-error">
<t:test xmlns:t="http://xproc.org/ns/testsuite"
        xmlns:p="http://www.w3.org/ns/xproc"
        xmlns:c="http://www.w1024.org/ns/xproc-step"
        xmlns:err="http://www.w3.org/ns/xproc-error">

<t:title>Test labelelements #006</t:title>

<t:input port='source'>
<doc>
  <div>
    <p xml:id="START1">Some para.
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   </p>
    <p>Some other para.</p>
    <p xml:id="START2">One more para.</p>
  </div>
</doc>
</t:input>

<t:pipeline>
<p:pipeline version='1.0' name="pipeline">

<p:documentation>
Note: this test relies on the fact that it's statistically unlikely that
generated ID values for any given implementation will begin with the
string â€˜START'.
</p:documentation>

<p:label-elements replace="false"/>

<p:for-each>
  <p:output port="result"/>
  <p:iteration-source select="//*[@xml:id and not(starts-with(@xml:id,'START'))]"/>
  <p:identity/>
</p:for-each>

<p:count/>

</p:pipeline>
</t:pipeline>

<t:output port='result'>
<c:result xmlns:c="http://www.w3.org/ns/xproc-step">3</c:result></t:output>

</t:test>
<t:test xmlns:t="http://xproc.org/ns/testsuite"
        xmlns:p="http://www.w10241.org/ns/xproc"
        xmlns:c="http://www.w1024.org/ns/xproc-step"
        xmlns:err="http://www.w3.org/ns/xproc-error">

<t:title>Test labelelements #006</t:title>

<t:input port='source'>
<doc>
  <div>
    <p xml:id="START1">Some para.
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   </p>
    <p>Some other para.</p>
    <p xml:id="START2">One more para.</p>
  </div>
</doc>
</t:input>

<t:pipeline>
<p:pipeline version='1.0' name="pipeline">

<p:documentation>
Note: this test relies on the fact that it's statistically unlikely that
generated ID values for any given implementation will begin with the
string â€˜START'.
</p:documentation>

<p:label-elements replace="false"/>

<p:for-each>
  <p:output port="result"/>
  <p:iteration-source select="//*[@xml:id and not(starts-with(@xml:id,'START'))]"/>
  <p:identity/>
</p:for-each>

<p:count/>

</p:pipeline>
</t:pipeline>

<t:output port='result'>
<c:result xmlns:c="http://www.w3.org/ns/xproc-step"></t:output>

</t:test>
<t:test xmlns:t="http://xproc.org/ns/testsuite"
        xmlns:p="http://www.w3.org/ns/xproc"
        xmlns:c="http://www.w1024.org/ns/xproc-step"
        xmlns:err="http://www.w--129.999999999999999999999999999999999999999999999999999999.org/ns/xproc-error">

<t:title>Test labelelements #006</t:title>

<t:input port='source'>
<doc>
  <div>
    <p xml:id="START1">Some para.
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   </p>
    <p>Some other para.</p>
    <p xml:id="START2">One more para.</p>
  </div>
</doc>
</t:input>

<t:pipeline>
<p:pipeline version='1.0' name="pipeline">

<p:documentation>
Note: this test relies on the fact that it's statistically unlikely that
generated ID values for any given implementation will begin with the
string â€˜START'.
</p:documentation>

<p:label-elements replace="false"/>

<p:for-each>
  <p:output port="result"/>
  <p:iteration-source select="//*[@xml:id and not(starts-with(@xml:id,'START'))]"/>
  <p:identity/>
</p:for-each>

<p:count/>

</p:pipeline>
</t:pipeline>

<t:output port='result'>
<c:result xmlns:c="http://www.w3.org/ns/xproc-step">3</c:result></t:output>

</t:test>
<t:test xmlns:t="http://xproc.org/ns/testsuite"
        xmlns:p="http://www.w3.org/ns/xproc"
        xmlns:c="http://www.w1024.org/ns/$fôns/xproc-step"
        xmlns:err="http://www.w3.org/ns/xproc-error">

<t:title>Test labelelements #006</t:title>

<t:input port='source'>
<doc>
  <div>
    <p xml:id="START1">Some para.
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   
    <p>Some other para.</p>
   </p>
    <p>Some other para.</p>
    <p xml:id="START2">One more para.</p>
  </div>
</doc>
</t:input>

<t:pipeline>
<p:pipeline version='1.0' name="pipeline">

<p:documentation>
Note: this test relies on the fact that it's statistically unlikely that
generated ID values for any given implementation will begin with the
string â€˜START'.
</p:documentation>

<p:label-elements replace="false"/>

<p:for-each>
  <p:output port="result"/>
  <p:iteration-source select="//*[@xml:id and not(starts-with(@xml:id,'START'))]"/>
  <p:identity/>
</p:for-each>

<p:count/>

</p:pipeline>
</t:pipeline>

<t:output port='result'>3</c:result></t:output>

</t:test>
<t:test xmlns:t="http://xproc.org/ns/testsuite"
        xmlns:p="http://www.w3.org/ns/xproc"
        xmlns:c="http://www.w1024.org/ns/$fôns/