
<div1 id="concepts"><head>Concepts</head> 
  <p>This informative chapter provides an easily approachable description of
	 the design of XForms, describing the major components and how they relate. Not
	 every feature of XForms is covered here. For a complete, normative description
	 of XForms, refer to the remainder of this document.</p> 
  <div2 id="concepts-purpose-presentation"><head>Purpose and
		Presentation</head> 
	 <p>For explanatory purposes, a form can be considered to consist of
		'purpose', 'presentation', and 'data'. Some examples:</p> 
	 <table
	  width="100%"><thead><tr><td><term>Purpose</term></td><td><term>Presentation</term></td><td><term>Data</term></td></tr>
		  
		</thead><tbody> 
		  <tr><td>Data collection</td><td>Arrangement of form
				controls</td><td>Registration information</td></tr> 
		  <tr><td>Time card</td><td>How dates are entered</td><td>Days and hours
				worked</td></tr> 
		  <tr><td>Order form</td><td>How to render the form controls on small
				devices</td><td>Order, shipping, and payment info</td></tr> 
		  <tr><td>Information Please</td><td>How the form integrates with a Web
				site</td><td>User contact information</td></tr> 
		</tbody></table> 
	 <p>The design of existing Web forms didn't separate the purpose from the
		presentation of a form, and additionally offered only a restricted
		representation for data captured through the form. This is the primary
		difference between XForms and previous form technologies.</p> 
  </div2> 
  <div2 id="concepts-xhtml"> 
	 <head> Current Approach: XHTML</head> 
	 <p> Take for instance a simple eCommerce form authored in XHTML<phrase diff="del">
		1.0</phrase>:</p> 
	 <eg xml:space="preserve"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
          "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
  <title>eCommerce Form</title>
</head>
<body>
<form action="http://example.com/submit" method="post">
  <table>
    <tr>
      <td><p>Select Payment Method:</p></td>
      <td><label><input type="radio" name="as" value="cash"/>Cash</label>
      <label><input type="radio" name="as" value="credit"/>Credit</label></td>
    </tr>
    <tr>
      <td><label for="cc">Credit Card Number:</label></td>
      <td><input type="text" name="cc" id="cc"/></td>
    </tr>
    <tr>
       <td><label for="exp">Expiration Date:</label></td>
       <td><input type="text" name="exp" id="exp"/></td>
    </tr>
    <tr>
       <td colspan="2"><input type="submit"/></td>
    </tr>
  </table>
</form>
</body>
</html>]]></eg> 
	 <p>A browser might render this form as follows:</p><graphic
	 source="images/concepts-xhtml.png" alt="screen shot of a graphic rendering"/> 
	 <p>This form makes no effort to separate purpose (data collection
		semantics) from presentation (the <code>&lt;input&gt;</code> form controls), and offers no control over the basic name/value pair
		<phrase diff="chg">serialization</phrase> of the resulting data. XForms greatly
		improve the expressive capabilities of electronic forms.</p>
</div2>
<div2 id="concepts-xfu"><head>Stepping Up to XForms</head> 
  <p>XForms are comprised of separate sections that describe what the form
	 does, and how the form is to be presented. This allows for flexible
	 presentation options, making it possible for classic XHTML form controls, as
	 well as other form control sets such as WML, to be leveraged as shown
	 here:</p><graphic source="images/arch1.jpg"
  alt="puzzle pieces; 'XForms Model' on the left, on the right 'XForms User Interface', 'XHTML', 'WML', and a stack of 'proprietary' pieces"/>
  
  <p>The simplest case involves authoring only the new XForms
	 <termref def="def-form-control">form control</termref>s, leaving out the other
	 sections of the form. To convert the previous form into XForms this way, an
	 <el>xform</el> element is needed in the <el>head</el> section of the
	 document:</p> 
  <eg xml:space="preserve"><![CDATA[<xform:xform>
  <xform:submitInfo .../>
</xform:xform>]]></eg> 
  <p>With these changes to the containing document, the previous example could
	 be rewritten like this:</p> 
  <eg xml:space="preserve"><![CDATA[<xform:selectOne ref="as">
  <xform:caption>Select Payment Method</xform:caption>
  <xform:choices>
    <xform:item value="cash"><xform:caption>Cash</xform:caption></xform:item>
    <xform:item value="credit"><xform:caption>Credit</xform:caption></xform:item>
  </xform:choices>
</xform:selectOne>
<xform:input ref="cc">
  <xform:caption>Credit Card Number</xform:caption>
</xform:input>
<xform:input ref="exp">
  <xform:caption>Expiration Date</xform:caption>
</xform:input>
<xform:submit>
  <xform:caption>Submit</xform:caption>
</xform:submit>]]></eg> 
  <p>Notice the following features of this design:</p> 
  <ulist> 
	 <item> 
		<p>The user interface is n