<?xml version="1.0" encoding="UTF-8"?>

<sumoshader name="red">

	<shader type="vertex">

		<functions>
		 varying vec3 N;
		 varying vec3 v;
		 varying vec2 varTexCoord;
		</functions>

		<main>
    v = vec3(gl_ModelViewMatrix * gl_Vertex);
 
    N = normalize(gl_NormalMatrix * gl_Normal);
 
    color = gl_ModelViewProjectionMatrix * gl_Vertex;
    
    varTexCoord = vec2(gl_MultiTexCoord0);


	</main>
	</shader>


	<shader type="fragment">

		<functions>
varying vec3 N;
varying vec3 v;
varying vec2 varTexCoord;

	float rand(vec2 co)
	{
	  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453*(1.0)); //*time)
	}
		
			
	vec4 light0 ()
	{
	vec4 color;
	 
	
	vec3 L = normalize(gl_LightSource[0].position.xyz - v); 
	vec3 E = normalize(-v); // we are in Eye Coordinates, so EyePos is (0,0,0)
	vec3 R = normalize(-reflect(L,N)); 
	
	float dist = length(L);
	
	float atten = 1.0 / (gl_LightSource[0].constantAttenuation +
	              gl_LightSource[0].linearAttenuation * dist +
	              gl_LightSource[0].quadraticAttenuation * dist * dist);
	
	//calculate Ambient Term:
	vec4 Iamb = gl_LightSource[0].ambient*gl_FrontMaterial.ambient;
	
	//calculate Diffuse Term:
	vec4 Idiff = (gl_LightSource[0].diffuse * max(dot(N,L), 0.0))*gl_FrontMaterial.diffuse;
	
	// calculate Specular Term:
	vec4 Ispec = gl_FrontMaterial.specular * pow(max(dot(R,E),0.0),0.3*gl_FrontMaterial.shininess);
	
	color = gl_FrontMaterial.emission+Iamb+atten*(gl_FrontMaterial.ambient + Idiff + Ispec);
	return color;
	}
		
		
		</functions>

		<main>

 		// gl_FragColor = (light0()+light1()+light2())*texture2D(baseMap, varTexCoord);
 		color=light0();
 		
 		
 		//if(mod(floor(gl_FragCoord.y),2.0)>0.5 )color=vec4(0.5,0.5,0.5,1.0);
 		
 		//if( mod( gl_FragCoord.y+gl_FragCoord.x+v.x*v.y*-10,190+v.y) >90 ) color*=0.8;

 		//if( mod( (N.x+N.z+v.y)/3,1) >0.5 ) color*=0.8;

/*
noodlesoup!*/		
 	if( mod( gl_FragCoord.x+N.y*v.y*N.z*-10,180+v.y) >90 ) color*=0.95;
 	if( mod( gl_FragCoord.y+N.z*v.y*N.x*-10,180+v.z) >40 ) color*=0.95;			
 

		</main>

	</shader>

</sumoshader>