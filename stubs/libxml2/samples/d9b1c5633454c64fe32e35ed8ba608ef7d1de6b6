<?xml version="1.0" encoding="UTF-8"?>

<sumoshader name="red">

	<shader type="vertex">

		<functions>
			varying vec3 normal, lightDir, eyeVec;
	</functions>

		<main>
			normal = gl_NormalMatrix * gl_Normal;

			vec3 vVertex =
			vec3(gl_ModelViewMatrix * gl_Vertex);

			lightDir =
			vec3(gl_LightSource[1].position.xyz - vVertex);
			eyeVec = -vVertex;

			color=ftransform();

	</main>
	</shader>


	<shader type="fragment">

		<functions>
			varying vec3 normal, lightDir, eyeVec;
		
		</functions>

		<main>

			vec4 final_color = (gl_FrontLightModelProduct.sceneColor *
			gl_FrontMaterial.ambient)
			+ (gl_LightSource[1].ambient *
			gl_FrontMaterial.ambient);

			vec3 N = normalize(normal);
			vec3 L =
			normalize(lightDir);

			float lambertTerm = dot(N,L);

			if(lambertTerm >0.0)
			{
				final_color += gl_LightSource[1].diffuse *	gl_FrontMaterial.diffuse *	lambertTerm;
	
				vec3 E = normalize(eyeVec);
				vec3 R = reflect(-L, N);
				float specular = pow( max(dot(R, E), 0.0), gl_FrontMaterial.shininess );
				
				// haxx: 0.1 MACHT ALLES FDUNKLER
				
				final_color +=	gl_LightSource[1].specular *gl_FrontMaterial.specular *	specular; 
			}
			color=final_color;

		</main>

	</shader>

</sumoshader>