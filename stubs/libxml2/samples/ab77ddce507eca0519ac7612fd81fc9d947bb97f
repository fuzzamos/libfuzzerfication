<?xml version="1.0" encoding="utf-8"?>
<shader name="BaseShader" type="model">

  <params>
  </params>
  
  <directx9>

    <technique name="posCol" vertexType="PosCol"/>
    <technique name="posNor" vertexType="PosNor"/>
    <technique name="posNorPos" vertexType="PosNor" instanceType="Pos"/>
    <technique name="posNorTex" vertexType="PosNorTex"/>
    <technique name="posNorTexPos" vertexType="PosNorTex" instanceType="Pos"/>
    <technique name="posNorTanTex" vertexType="PosNorTanTex"/>
    
  </directx9>
  
  <directx11 lightingModel="forwardMultiple">

    <!-- lightingModel="none" -->
    <!-- lightingModel="forwardSingle" -->
    <!-- lightingModel="forwardMultiple" -->
    <!-- lightingModel="forwardTiled" -->
    <!-- lightingModel="deferred" -->
    <!-- lightingModel="deferredTiled" -->
    <!-- lightingModel="imageBased" -->
    <!-- lightingModel="visualStudio" -->
    
    <!-- And if we provide the lighting model here, the register mappings for the optional parameters 
    can be specified with the lighting model registers already taken into consideration! :D -->
    
    <technique vertexShader="BaseShaderVtxPosCol" pixelShader="BaseShaderPixPosCol" vertexType="PosCol" />
    <technique vertexShader="BaseShaderVtxPosNor" pixelShader="BaseShaderPixPosNor"  vertexType="PosNor" />
    <technique vertexShader="BaseShaderVtxPosNorPos" pixelShader="BaseShaderPixPosNor" vertexType="PosNor" instanceType="Pos" />
    <technique vertexShader="BaseShaderVtxPosNorPosSca" pixelShader="BaseShaderPixPosNor" vertexType="PosNor" instanceType="PosSca" />
    <technique vertexShader="BaseShaderVtxPosNorTex" pixelShader="BaseShaderPixPosNorTex" vertexType="PosNorTex" />
    <technique vertexShader="BaseShaderVtxPosNorTexPos" pixelShader="BaseShaderPixPosNorTex" vertexType="PosNorTex" instanceType="Pos" />
    <technique vertexShader="BaseShaderVtxPosNorTanTex" pixelShader="BaseShaderPixPosNorTanTex" vertexType="PosNorTanTex" />

  </directx11>

  <opengl4>
  </opengl4>
  
</shader>